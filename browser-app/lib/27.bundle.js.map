{"version":3,"sources":["webpack:////Users/hemantd/Desktop/node_modules/file-dialog/file-dialog.min.js","webpack:///../defect/src/browser/defect-contribution.ts","webpack:///../defect/src/browser/defect-frontend-module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,kCAAa,oFAAoF,gBAAgB,aAAa,qGAAqG,aAAa,aAAa,iBAAiB,0CAA0C,IAAI,sBAAsB,sCAAsC,4RAA4R,uCAAuC,WAAW,oBAAoB,8DAA8D,EAAE,0CAA0C,uFAAuF,GAAG,KAAqC,CAAC,mCAAO,WAAW,SAAS;AAAA,oGAAC,CAAC,SAAwI,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1mC,qGAA6C;AAC7C,oHAAkI;AAClI,uHAAsD;AACtD,IAAM,UAAU,GAAG,mBAAO,CAAC,sEAAa,CAAC,CAAC;AAE7B,wBAAgB,GAAG;IAC5B,EAAE,EAAE,mBAAmB;IACvB,KAAK,EAAE,YAAY;CACtB,CAAC;AAIF;IAEI,mCAC2C,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IACrE,CAAC;IAEL,oDAAgB,GAAhB,UAAiB,QAAyB;QAA1C,iBA8BC;QA7BG,QAAQ,CAAC,eAAe,CAAC,wBAAgB,EAAE;YACxC,OAAO,EAAE;gBAGV,UAAU,EAAE;qBACT,IAAI,CAAC,UAAC,IAAQ;oBACX,IAAM,IAAI,GAAG,IAAI,QAAQ,EAAE;oBAG3B,iBAAiB;oBAGjB,KAAK,CAAC,mDAAmD,EAAE;wBACvD,MAAM,EAAE,MAAM;wBACf,gBAAgB;wBAChB,OAAO,EAAE;4BACR,QAAQ,EAAE,kBAAkB;4BAC5B,cAAc,EAAE,qBAAqB;yBAEtC;wBACA,IAAI,EAAC,IAAI;qBACR,CAAC,CAAC,IAAI,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;yBAClC,IAAI,CAAC,UAAC,IAAI,IAAM,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,GAAC,CAAC,CAAC;gBAE/D,CAAC,CAAC;YAGT,CAAC;SACA,CAAC;IACE,CAAC;IApCQ,yBAAyB;QADrC,sBAAU,EAAE;QAIL,6BAAM,CAAC,uBAAc,CAAC;yCAAiC,uBAAc;OAHhE,yBAAyB,CAqCrC;IAAD,gCAAC;CAAA;AArCY,8DAAyB;AAwCtC;IAAA;IAQA,CAAC;IANG,8CAAa,GAAb,UAAc,KAAwB;QAClC,KAAK,CAAC,kBAAkB,CAAC,qBAAW,CAAC,SAAS,EAAE;YAC5C,SAAS,EAAE,wBAAgB,CAAC,EAAE;YAC9B,KAAK,EAAE,wBAAgB,CAAC,KAAK;SAChC,CAAC,CAAC;IACP,CAAC;IAPQ,sBAAsB;QADlC,sBAAU,EAAE;OACA,sBAAsB,CAQlC;IAAD,6BAAC;CAAA;AARY,wDAAsB;;;;;;;;;;;;;;ACpDnC;;GAEG;;AAEH,6HAA0F;AAC1F,oHAGgC;AAEhC,qGAA4C;AAE5C,kBAAe,IAAI,2BAAe,CAAC,cAAI;IACnC,sCAAsC;IAEtC,IAAI,CAAC,4BAAmB,CAAC,CAAC,EAAE,CAAC,+CAAyB,CAAC,CAAC;IACxD,IAAI,CAAC,yBAAgB,CAAC,CAAC,EAAE,CAAC,4CAAsB,CAAC,CAAC;AAEtD,CAAC,CAAC,CAAC","file":"27.bundle.js","sourcesContent":["'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&'function'==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?'symbol':typeof a};(function(a){'use strict';var b=function(){for(var d=arguments.length,c=Array(d),f=0;f<d;f++)c[f]=arguments[f];var g=document.createElement('input');return'object'===_typeof(c[0])&&(!0===c[0].multiple&&g.setAttribute('multiple',''),void 0!==c[0].accept&&g.setAttribute('accept',c[0].accept)),g.setAttribute('type','file'),g.style.display='none',g.setAttribute('id','hidden-file'),document.body.appendChild(g),new Promise(function(h){g.addEventListener('change',function(){h(g.files);var l=c[c.length-1];'function'==typeof l&&l(g.files),document.body.removeChild(g)});var j=document.createEvent('MouseEvents');j.initMouseEvent('click',!0,!0,window,1,0,0,0,0,!1,!1,!1,!1,0,null),g.dispatchEvent(j)})};'function'==typeof define&&define.amd?define(function(){return b}):'undefined'==typeof exports?a.fileDialog=b:('undefined'!=typeof module&&module.exports&&(exports=module.exports=b),exports.fileDialog=b)})(void 0);\n","import { injectable,inject} from \"inversify\";\nimport { CommandContribution, CommandRegistry, MenuContribution, MenuModelRegistry,MessageService } from \"@theia/core/lib/common\";\nimport { CommonMenus } from \"@theia/core/lib/browser\";\nconst fileDialog = require('file-dialog');\n\nexport const DefectApiCommand = {\n    id: 'DefectApi.command',\n    label: \"Defect API\"\n};\n\n\n@injectable()\nexport class DefectCommandContribution implements CommandContribution {\n\n    constructor(\n       @inject(MessageService) public readonly messageService: MessageService,\n    ) { }\n\n    registerCommands(registry: CommandRegistry): void {\n        registry.registerCommand(DefectApiCommand, {\n           execute: () =>{ \n               \n\n          fileDialog()\n            .then((file:any) => {\n                const data = new FormData()\n\n         \n                // Post to server\n               \n                \n                fetch('http://localhost:5000/api/classification/classify', {\n                    method: 'POST',\n                   // mode: 'cors',\n                   headers: {\n                    'Accept': 'application/text',\n                    'Content-Type': 'multipart/form-data'\n                \n                  },     \n                   body:data,\n                   }).then(response => response.text())\n                    .then((text) => {this.messageService.info(text)});\n                \n       })\n       \n\n}\n})\n    }\n}\n\n@injectable()\nexport class DefectMenuContribution implements MenuContribution {\n\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerMenuAction(CommonMenus.EDIT_FIND, {\n            commandId: DefectApiCommand.id,\n            label: DefectApiCommand.label\n        });\n    }\n}\n","/**\n * Generated using theia-extension-generator\n */\n\nimport { DefectCommandContribution, DefectMenuContribution } from './defect-contribution';\nimport {\n    CommandContribution,\n    MenuContribution\n} from \"@theia/core/lib/common\";\n\nimport { ContainerModule } from \"inversify\";\n\nexport default new ContainerModule(bind => {\n    // add your contribution bindings here\n    \n    bind(CommandContribution).to(DefectCommandContribution);\n    bind(MenuContribution).to(DefectMenuContribution);\n    \n});\n"],"sourceRoot":""}